@model StopTimetable
@{
    ViewData["Title"] = "Vozni red linije iz postaje";
    string tempTime = "0";
}

<div class="stopHeaderContainer">
    <div id="map"></div>
    <div class="stopNameHeader">
        <div class="stopNameTextHeader">
            <div class="lineNumberContainer timetableLineNumberContainer pull-left text-center" style="background-color: @Model.HTMLColor;">
                <span class="tripShortName">@Model.RouteShortName</span>
            </div>
            @Model.StopName.Trim()
        </div>
        <div class="timetableDate">
            <input type="text"
                   id="datepicker"
                   onchange="navigateWithDate('@Url.Action("Timetable","Stops", new { stopName = Model.StopName, routeShortName = Model.RouteShortName, directionId = Model.DirectionId})')"
                   data-date="@Model.RequestedDate">
        </div>
    </div>
</div>

<div class="text-center">
    @foreach (var item in Model.StopTimetables)
    {
        @if (item != null)
        {
            tempTime = item.DepartureTimes.First().Substring(0, 2);
            <h2>
                @item.TripShortName
                @item.TripHeadsign
            </h2>
            <div>
                @foreach (string departureTime in item.DepartureTimes)
                {
                    if (departureTime.Substring(0, 2) != tempTime)
                    {
                        <br />
                        tempTime = departureTime.Substring(0, 2);
                    }
                    <span>@departureTime</span>
                }
            </div>
        }
        else
        {
            <h2>NE VOZI NA TA DAN</h2>
        }
    }
</div>

<script>
    stopsArray = @Html.Raw(Json.Serialize(Model.RouteStopLocations));
</script>

@section Scripts {
    @await Html.PartialAsync("_GoogleMapsScripts", Model.StopLocation)
}
