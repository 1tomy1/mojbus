@model StopTimetable
@{
    ViewData["Title"] = "Odhodi iz postaje";
}
<div class="stopHeaderContainer">
    <div id="map"></div>
    <div class="stopNameHeader">
        <div class="stopNameTextHeader">@Model.StopName.Trim()</div>
        <div class="btn changeDirectionButton"
             onclick="navigateWithDate('@Url.Action("Index","Stops", new { stopName = Model.StopName, directionId = Model.DirectionId == 1 ? 0 : 1})')">
            @if (Model.DirectionId == 1)
            {
                <img class="directionArrowImage" src="~/images/awayFromCity.svg" />
            }
            else
            {
                <img class="directionArrowImage" src="~/images/toCity.svg" />
            }
        </div>
        <div class="tripPlannerDate">
            <input type="text"
                   id="datepicker"
                   onchange="navigateWithDate('@Url.Action("Index","Stops", new { stopName = Model.StopName, directionId = Model.DirectionId})')"
                   data-date="@Model.RequestedDate">
            <input id="timepicker"
                   data-date="@Model.RequestedDate"/>
        </div>
    </div>
</div>

<div>
    @foreach (var item in Model.StopTimetables)
    {
        @if (item != null)
        {
            <div class="flex-container flexContainerNoMargin">
                <a class="btn btn-default btn-block departureDataContainer" href="@Url.Action("Timetable", "Stops", new { stopName = item.StopName, routeShortName = item.TripShortName, directionId = item.DirectionID, date = Model.RequestedDate })">
                    <div class="lineNumberContainer pull-left text-center" style="background-color: @item.HTMLColor;">
                        <span class="tripShortName">@item.RouteShortName</span>
                    </div>

                    @{
                        IEnumerable<string> departureTimes = item.DepartureTimes.Where(x => (Model.RequestedDate.Hour <= Convert.ToInt32(x.Substring(0, 2)) && Model.RequestedDate.Minute <= Convert.ToInt32(x.Substring(3, 2))) || (Model.RequestedDate.Hour < Convert.ToInt32(x.Substring(0, 2)))).Take(5);

                        if (departureTimes.Count() == 0)
                        {
                            <span>Od trenutne ure naprej ne vozi vec!</span>
                        }
                        else
                        {
                            <div class="departureTime">
                                @foreach (string departureTime in departureTimes)
                                {
                                    <span>@departureTime</span>
                                }
                            </div>

                        }
                    }
                </a>
                @if (User.Identity.IsAuthenticated)
                {
                    <div onclick="ChangeFavourite(this, '@item.StopName', '@item.TripShortName', '@item.DirectionID')" class="btn btn-default addToFavouritesButton">
                        @if (item.isFavourite)
                        {
                            <img class="favouritesStarImage" src="~/images/starRed.svg" />
                        }
                        else
                        {
                            <img class="favouritesStarImage" src="~/images/starGray.svg" />
                        }
                    </div>
                }
            </div>
        }
    }
</div>

@section Scripts {
    @await Html.PartialAsync("_GoogleMapsScripts", Model.StopLocation)
}
