@model TripPlannerModel
@{
    ViewData["Title"] = "Načrtovalec";
}

@if (Model.StartStop == null || Model.EndStop == null)
{
    <h2>Avtobus nima direktne povezave med izbranima postajama.</h2>
}
else
{
    <div class="stopHeaderContainer">
        <div id="map"></div>
        <div class="stopNameHeader">
            <div class="tripPlannerStopName">@Model.StartStop.StopName.Trim()</div>
            <div class="tripPlannerStopName">-</div>
            <div class="tripPlannerStopName">@Model.EndStop.StopName.Trim()</div>
            <div class="tripPlannerDate">
                <input type="text" 
                       id="datepicker" 
                       onchange="navigateWithDate('@Url.Action("TripPlanner","Stops", new { stopFrom=Model.StartStop.StopName, stopTo=Model.EndStop.StopName})')" 
                       data-date="@Model.RequestedDate.Date">
            </div>            
        </div>
    </div>

    <div>
        @foreach (var item in Model.Lines)
        {
            @if (item != null)
            {
                <div class="flex-container flexContainerNoMargin">
                    <div class="btn btn-default btn-block departureDataContainer" onclick="navigateWithDate('@Url.Action("Timetable", "Stops", new { stopName = Model.StartStop.StopName, routeShortName = item.TripShortName, directionId = item.Trips.First().TripDirectionID, date = Model.RequestedDate })')">
                        <div class="lineNumberContainer pull-left text-center" style="background-color: @item.HTMLColor;">
                            <span class="tripShortName">@item.RouteShortName</span>
                        </div>
                        <div class="departureTimeTripPlanner">
                            @foreach (var trip in item.Trips.SelectMany(x => x.Times).Take(5))
                            {
                                <div class="departureTimeData">
                                    <span>@trip.DepartureTime</span>
                                    <br />
                                    <span>@trip.TravelTimeMinutes min</span>
                                </div>

                            }
                        </div>
                    </div>
                </div>
            }
        }
    </div>

    @section Scripts {
        @await Html.PartialAsync("_GoogleMapsScripts", new StopLocationModel() { StopLat = Model.StartStop.StopLat, StopLon = Model.StartStop.StopLon })
    }
}